{"version":3,"sources":["scripts/State.ts","scripts/Updates.ts","scripts/utils.ts","scripts/constants.ts","scripts/OreParticle.ts","scripts/RisingText.ts","scripts/Tabs.ts","scripts/Tooltip.ts","scripts/Buildings.ts","scripts/SmithUpgrades.ts","scripts/Toast.ts","scripts/Achievements.ts","scripts/upgrades/schoolUpgrades.ts","scripts/upgrades/farmUpgrades.ts","scripts/upgrades/quarryUpgrades.ts","scripts/upgrades/churchUpgrades.ts","scripts/upgrades/factoryUpgrades.ts","scripts/upgrades/index.ts","scripts/Upgrades.ts","scripts/index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"scripts.2ed900e3.js","sourceRoot":"../src","sourcesContent":["import Inventory from './interfaces/Inventory';\nimport Generation from './interfaces/Generation';\nimport Ore from './interfaces/Ore';\nimport Settings from './interfaces/Settings';\nimport { Tab } from './Tabs';\nimport { Building } from './Buildings';\nimport { Stats } from './interfaces/Stats';\nimport { SmithUpgrade } from './SmithUpgrades';\n\ninterface State {\n    opc: number;\n    ops: number;\n    inventory: Inventory;\n    generation: Generation;\n    ore: Ore;\n    smith: {\n        inProgress: boolean;\n        currentProgress: number;\n        currentUpgrade: SmithUpgrade;\n        power: number;\n        maxPower: number;\n    };\n    stats: Stats;\n    settings: Settings;\n    buildings: any;\n    upgrades: any;\n    achievements: any;\n    textScrollerMessages: string[];\n}\n\nexport const State: State = {\n    opc: 50,\n    ops: 0,\n\n    inventory: {\n        ores: 0,\n        refined: 0\n    },\n\n    generation: {\n        lv: 1,\n        lvOnRefine: 1,\n        xp: 0,\n        maxXp: 10\n    },\n\n    ore: {\n        hp: 50,\n        maxHp: 50,\n        spriteType: 5,\n        spriteHp: 1\n    },\n\n    stats: {\n        weakSpotMultiplier: 5,\n        oreClicks: 0,\n        weakSpotClicks: 0,\n        currentCombo: 0,\n        highestCombo: 0,\n        rocksDestroyed: 0\n    },\n\n    smith: {\n        inProgress: false,\n        currentProgress: null,\n        currentUpgrade: null,\n        power: 5,\n        maxPower: 5\n    },\n\n    settings: {\n        tick: 60,\n        oreHpType: 'percentage'\n    },\n\n    buildings: {},\n    upgrades: {},\n    achievements: {},\n\n    textScrollerMessages: [\n        'What is a rocks favorite fruit? ... Pom-a-granite',\n        \"Did you see that cleavage? Now that's some gneiss schist.\",\n        'All rock and no clay makes you a dull boy (or girl)',\n        \"Don't take life for granite\",\n        'What happens when you throw a blue rock in the red sea? ... It gets wet',\n        'As you can tell, these are pretty lame... Submit your own to /u/name_is_Syn',\n        'Rocks really rock!',\n        \"I can't believe I'm googling rock puns right now\",\n        'There are a few gems amongst all these terrible rock puns',\n        'These puns sure are all ore nothing',\n        'Rock pun here'\n    ]\n};\n\ninterface InstanceState {\n    selectedTab: string;\n    buyAmount: 1 | 10 | 100 | 'max';\n    oreParticles: {};\n    tabs: Tab[];\n    toasts: any[];\n    smithUpgrades: SmithUpgrade[];\n    textScroller: {\n        isInProgress: boolean;\n        backlog: string[];\n    };\n}\n\nexport const InstanceState: InstanceState = {\n    selectedTab: 'store',\n    buyAmount: 1,\n    oreParticles: {},\n    tabs: [],\n    toasts: [],\n    smithUpgrades: [],\n    textScroller: {\n        isInProgress: true,\n        backlog: []\n    }\n};\n","interface Updates {\n    updateOPS: boolean;\n\n    updateOres: boolean;\n    updateOreHp: boolean;\n    updateOreSprite: boolean;\n    updateGenerationLv: boolean;\n    updateGenerationLvOnRefine: boolean;\n    updateGenerationXp: boolean;\n\n    updateTabs: boolean;\n    updateTabContent: boolean;\n}\n\nexport const UpdatesState: Updates = {\n    updateOPS: true,\n\n    updateOres: true,\n    updateOreHp: true,\n    updateOreSprite: true,\n    updateGenerationLv: true,\n    updateGenerationLvOnRefine: true,\n    updateGenerationXp: true,\n\n    updateTabs: true,\n    updateTabContent: true\n};\n","import { Building } from './Buildings';\nimport { InstanceState } from './State';\n\nexport const select = (el: string): any => document.querySelector(`${el}`);\n\nexport const getPercentage = (current: number, max: number): number => (current / max) * 100;\n\nexport const formatNumber = (num: number): number => {\n    // return num.toFixed(0);\n    return Math.ceil(num);\n};\n\nexport const removeEl = (el: HTMLElement): void => {\n    if (el.parentNode) el.parentNode.removeChild(el);\n};\n\nexport const getRandomNum = (min = 0, max = 1, fractionDigits = 0, inclusive = true) => {\n    const precision = Math.pow(10, Math.max(fractionDigits, 0));\n    const scaledMax = max * precision;\n    const scaledMin = min * precision;\n    const offset = inclusive ? 1 : 0;\n    const num = Math.floor(Math.random() * (scaledMax - scaledMin + offset)) + scaledMin;\n\n    return num / precision;\n};\n\nexport const getCodeName = (str: string): string => {\n    return str\n        .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        })\n        .replace(/\\s+/g, '')\n        .replace(/\\./g, '');\n};\n\nexport const updateEl = (targetEl: HTMLElement, updates: HTMLElement): void => {\n    targetEl.innerHTML = '';\n    targetEl.append(updates);\n};\n\nexport const createEl = (type: string, classes: string[] = [], content: string | number = ''): HTMLElement => {\n    const el = document.createElement(type);\n\n    classes.forEach((c: string) => el.classList.add(c));\n\n    el.innerHTML = content + '';\n\n    return el;\n};\n\nexport const beautifyNumber = (number: number) => {\n    var SI_PREFIXES = [\n        '', // number is less than 1,000\n        'Thousand', // number is in the thousands\n        'Million',\n        'Billion',\n        'Trillion',\n        'Quadrillion',\n        'Quintillion',\n        'Sextillion',\n        'Septillion',\n        'Octillion',\n        'Nonillion',\n        'Decillion',\n        'Undecillion',\n        'Dodecillion',\n        'Tredecillion',\n        'Quattuordecillion',\n        'Quindecillion',\n        'Sexdecillion',\n        'Septendecillion',\n        'Octodecillion',\n        'Novemdecillion',\n        'Vigintillion',\n        'Unvigintillion',\n        'Dovigintillion',\n        'Trevigintillion',\n        'Quattuorvigintillion',\n        'Quinvigintillion',\n        'Sexvigintillion',\n        'Septenvigintillion',\n        'Octovigintillion',\n        'Novemvigintillion',\n        'Trigintillion',\n        'Untrigintillion',\n        'Dotrigintillion',\n        'Tretrigintillion',\n        'Quattuortrigintillion',\n        'Quintrigintillion',\n        'Sextrigintillion',\n        'Septentrigintillion',\n        'Octotrigintillion',\n        'Novemtrigintillion',\n        'F*ckloadillion',\n        'F*cktonillion'\n    ];\n\n    if (!number) return 0;\n    if (number <= 10) {\n        // if ( number % 1 == 0 ) return number.toFixed( 0 )\n\n        if (Math.round(number) === number) return number;\n\n        return number.toFixed(1);\n    }\n    // what tier? (determines SI prefix)\n    var tier = (Math.log10(number) / 3) | 0;\n\n    // if zero, we don't need a prefix\n    if (tier === 0) return Math.round(number);\n    // if (tier === 1) return Math.round(number)\n\n    // get prefix and determine scale\n    var prefix = SI_PREFIXES[tier];\n    var scale = Math.pow(10, tier * 3);\n\n    // scale the number\n    var scaled = number / scale;\n\n    // format number and add prefix as suffix\n    return parseFloat(scaled.toFixed(2)) + ' ' + prefix;\n};\n\nexport const getGeometricSequencePrice = (b: Building) => {\n    // 10 = 211\n\n    if (InstanceState.buyAmount !== 'max') {\n        const alreadyOwned = (b.basePrice * (1 - Math.pow(b.priceScale, b.owned))) / (1 - b.priceScale);\n        const total = (b.basePrice * (1 - Math.pow(b.priceScale, InstanceState.buyAmount + b.owned))) / (1 - b.priceScale);\n\n        return total - alreadyOwned;\n    }\n\n    // return (\n    //     b.currentPrice * ((Math.pow(b.priceScale, InstanceState.buyAmount - b.owned + 1) - Math.pow(1, InstanceState.buyAmount)) / 1.12 - 1)\n    // );\n};\n\nexport const findCodeNameInArr = (codeName: string, arr: any[]) => {\n    return arr.find((obj) => obj.codeName === codeName);\n};\n\nexport const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\n\nexport const getRandomFromArr = (arr) => arr[Math.floor(Math.random() * arr.length)];\n\nexport const isObjEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const sortObj = (obj, key) => {\n    let entries = Object.entries(obj);\n    return entries.sort((a: any, b: any) => a[1][key] - b[1][key]);\n};\n\nexport const isElEmpty = (el: HTMLElement) => el.innerHTML.length <= 0;\n","import { select as s } from './utils';\n\nexport const pageContainer: HTMLElement = s('.page-container');\nexport const gameContainerRight: HTMLElement = s('.game-container-right');\n\nexport const torchLeft: HTMLElement = s('.torch-left');\nexport const torchRight: HTMLElement = s('.torch-right');\n\nexport const textScrollerContainerEl: HTMLElement = s('.text-scroller-container');\nexport const textScrollerTextEl: HTMLElement = s('.text-scroller-container p');\n\nexport const toastsContainerEl: HTMLElement = s('.toasts-container');\nexport const toastsContainerLeftEl: HTMLElement = s('.toasts-container .left');\nexport const toastsContainerRightEl: HTMLElement = s('.toasts-container .right');\n\nexport const oreSpriteContainerEl: HTMLElement = s('.ore-sprite-container');\nexport const oreSpriteEl: HTMLImageElement = s('.ore-sprite');\nexport const oreHpEl: HTMLElement = s('.ore-hp');\n\nexport const topbarInventoryEl: HTMLElement = s('.topbar-inventory');\nexport const topbarInventoryOresEl: HTMLElement = s('.topbar-inventory-ores > .amount');\nexport const topbarInventoryGenerationLv: HTMLElement = s('.topbar-inventory-generation > .level');\nexport const topbarInventoryGenerationLvOnRefine: HTMLElement = s('.topbar-inventory-generation > .level-on-refine');\nexport const topbarInventoryGenerationXpBarEl: HTMLElement = s('.topbar-inventory-generation-xp .bar');\nexport const comboSignEl: HTMLElement = s('.combo-sign');\nexport const comboSignNumberEl: HTMLElement = s('.combo-sign span');\n\nexport const particlesCanvasEl: HTMLCanvasElement = s('#particles');\nexport const particlesCanvasContext: CanvasRenderingContext2D = particlesCanvasEl.getContext('2d');\n\nexport const tabsWrapperEl: HTMLElement = s('.tabs-wrapper');\nexport const tabsContentWrapperEl: HTMLElement = s('.tabs-content-wrapper');\n\nexport const tooltipWrapperEl: HTMLElement = s('.tooltip-wrapper');\n","import { getRandomNum } from './utils';\nimport { particlesCanvasContext as ctx, oreSpriteEl } from './constants';\nimport { InstanceState } from './State';\n\nlet oreParticlesIndex = 0;\n\nconst settings = {\n    gravity: 0.5,\n    maxLife: 100\n};\n\nexport const generateOreParticles = (event?: MouseEvent, amount = 4) => {\n    for (let i = 0; i < amount; i++) new OreParticle(event);\n};\n\nconst OreParticle = function (event?: MouseEvent) {\n    // Particle position\n    if (event) {\n        this.x = event.clientX;\n        this.y = event.clientY;\n    } else {\n        const oreSpriteDimensions = oreSpriteEl.getBoundingClientRect();\n        this.x = getRandomNum(oreSpriteDimensions.left, oreSpriteDimensions.right);\n        this.y = oreSpriteDimensions.top;\n    }\n\n    // Velocities\n    this.vx = getRandomNum(-2, 2, 5);\n    this.vy = getRandomNum(-2, -1, 5);\n\n    // Size\n    this.size = getRandomNum(0.5, 2.5, 3);\n\n    // Adding particle to index\n    oreParticlesIndex += 1;\n    InstanceState.oreParticles[oreParticlesIndex] = this;\n    this.id = oreParticlesIndex;\n    this.life = 0;\n    this.opacity = 1;\n};\n\nOreParticle.prototype.draw = function () {\n    // Move particle\n    this.x += this.vx;\n    this.y += this.vy;\n\n    // Adjust for gravity\n    this.vy += settings.gravity * Math.random();\n\n    // Age particle\n    this.life += 1;\n    this.opacity -= 0.02;\n\n    if (this.life > settings.maxLife || this.y >= window.innerHeight) {\n        delete InstanceState.oreParticles[this.id];\n    }\n\n    // Draw particle\n    const color = getRandomNum(150, 200);\n\n    ctx.beginPath();\n    ctx.fillStyle = `rgba( 255, 255, 255, ${this.opacity} )`;\n    // ctx.fillStyle = `rgba( ${color}, ${color}, ${color}, ${this.opacity} )`;\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n};\n","import { getRandomNum, removeEl, getRandomColor } from './utils';\nimport { pageContainer, oreSpriteEl } from './constants';\n\nexport const generateRisingText = (event: MouseEvent, type: string, amount?: number) => {\n    const el = document.createElement('div');\n\n    el.style.position = 'absolute';\n    el.style.pointerEvents = 'none';\n    el.style.color = 'white';\n    el.style.fontSize = '24px';\n    el.style.fontFamily = 'Germania One';\n    el.style.zIndex = '2';\n    el.style.textShadow = '0 0 1px rgba(0, 0, 0, 0.5)';\n    el.style.animation = 'flyingNumber 2s forwards ease-out';\n\n    switch (type) {\n        case 'buy':\n            el.style.color = 'crimson';\n            el.style.fontSize = '30px';\n            el.innerHTML = `-$`;\n            break;\n\n        case 'weakSpot':\n            el.style.fontSize = '28px';\n            el.style.animationDuration = '2.5s';\n            el.innerHTML = `+${amount}`;\n            break;\n\n        case 'combo':\n            el.innerHTML = `${amount} hit combo`;\n            el.style.color = getRandomColor();\n            el.style.fontSize = '35px';\n            el.style.animationDuration = '3s';\n            break;\n\n        case 'buildingOps':\n            let oreSpriteDimensions = oreSpriteEl.getBoundingClientRect();\n            el.style.animation = 'buildingFlyingNumber 1.2s ease-out';\n            el.style.left = (oreSpriteDimensions.left + oreSpriteDimensions.right) / 2 + 'px';\n            el.style.top = (oreSpriteDimensions.top + oreSpriteDimensions.bottom) / 2 + 'px';\n            el.innerHTML = `+${amount}`;\n            break;\n\n        default:\n            el.innerHTML = `+${amount}`;\n            break;\n    }\n\n    if (event) {\n        el.style.left = event.clientX + getRandomNum(-20, 20) + 'px';\n        el.style.top = event.clientY + getRandomNum(-5, 5) + 'px';\n    }\n\n    pageContainer.append(el);\n\n    el.addEventListener('animationend', () => removeEl(el));\n};\n","import { getCodeName } from './utils';\nimport { State, InstanceState } from './State';\nimport { UpdatesState } from './Updates';\n\nexport interface Tab {\n    name: string;\n    codeName?: TabName;\n    isLocked: boolean;\n}\n\nexport type TabName = 'store' | 'smith';\n\nconst Tab = function (o) {\n    this.name = o.name;\n    this.codeName = getCodeName(o.name);\n    this.isLocked = o.isLocked;\n};\n\nconst tabs = [\n    {\n        name: 'store',\n        isLocked: false\n    },\n    {\n        name: 'smith',\n        isLocked: true\n    }\n];\n\nexport const instantiateTabs = (t: Tab[] = JSON.parse(localStorage.getItem('tabs')) || tabs): void => {\n    const builtTabs = [];\n\n    t.forEach((tab: Tab) => {\n        builtTabs.push(new Tab(tab));\n    });\n\n    InstanceState.tabs = builtTabs;\n};\n","import { tooltipWrapperEl, gameContainerRight } from './constants';\nimport { getGeometricSequencePrice, beautifyNumber, getPercentage } from './utils';\nimport { Building } from './Buildings';\nimport { State } from './State';\nimport { SmithUpgrade } from './SmithUpgrades';\n\ninterface Tooltip {\n    type: 'building' | 'smithUpgrade' | 'upgrade';\n    building?: Building;\n    smithUpgrade?: SmithUpgrade;\n    upgrade?: any;\n}\n\nexport const hideTooltip = () => {\n    tooltipWrapperEl.innerHTML = '';\n    tooltipWrapperEl.classList.remove('visible');\n};\n\nexport const showTooltip = (event: MouseEvent, tt: Tooltip) => {\n    tooltipWrapperEl.classList.add('visible');\n\n    let str = '';\n\n    switch (tt.type) {\n        case 'building':\n            const price = getGeometricSequencePrice(tt.building);\n            str += `\n                <div class='tooltip-container tooltip-building tooltip-building-${tt.building.codeName}'>\n                    <div class='tooltip-top'>\n                        <img src='./images/building-${tt.building.codeName}.png'/>\n                        <div class='tooltip-target-name-container'>\n                            <p>${tt.building.name}</p>\n                            <small>[ ${tt.building.name} Production Multiplier: <strong>${\n                tt.building.productionMultiplier\n            }x</strong> ]</small>\n                        </div>\n                        <p class='price' style='${State.inventory.ores < price ? 'color: crimson' : ''}'>\n                            <img src='./images/ore.png'/>\n                            ${beautifyNumber(price)}\n                        </p>\n                    </div>\n                    <div class='tooltip-middle'>\n                        <p>${tt.building.desc}</p>\n                        <div class='stats'>\n                            <p>Each ${tt.building.name} generates <strong>${\n                tt.building.baseProduction * tt.building.productionMultiplier\n            }</strong> ores per second.</p>`;\n\n            if (tt.building.owned > 0) {\n                str += `\n                    <p><strong>${tt.building.owned} </strong>${\n                    tt.building.owned > 1 ? `${tt.building.namePlural} are` : `${tt.building.name} is`\n                } generating <strong>${\n                    tt.building.owned * (tt.building.baseProduction * tt.building.productionMultiplier)\n                }</strong> ore per second.</p>\n                    <p class='building-percentage'>${tt.building.name}s are currently generating <strong>${beautifyNumber(\n                    getPercentage(tt.building.owned * (tt.building.baseProduction * tt.building.productionMultiplier), State.ops)\n                )}%</strong> of your total OpS</p>\n                    `;\n            }\n\n            str += `\n                        </div>\n                    </div>\n                    <div class='tooltip-bottom'>\n                        <p>${tt.building.flavorText}</p>\n                    </div>\n                </div>\n            `;\n            break;\n        case 'upgrade':\n            str += `\n                <div class='tooltip-container tooltip-upgrade tooltip-upgrade-${tt.upgrade.codeName}'>\n                    <div class='tooltip-top'>\n                        <img src='./images/upgrade-${tt.upgrade.codeName}.png'/>\n                        <p>${tt.upgrade.name}</p>\n                        <p class='price' style='${State.inventory.ores < tt.upgrade.price ? 'color: crimson' : ''}'>\n                            <img src='./images/ore.png'/>\n                            ${beautifyNumber(tt.upgrade.price)}\n                        </p>\n                    </div>\n                    <div class='tooltip-middle'>\n                        <p>${tt.upgrade.desc}</p>\n                    </div>\n                    <div class='tooltip-bottom'>\n                        <p>${tt.upgrade.flavorText}</p>\n                    </div>\n                </div>\n            `;\n            break;\n        case 'smithUpgrade':\n            const upgrade = tt.smithUpgrade;\n            str += `\n                <div class='tooltip-container tooltip-smithUpgrade tooltip-smithUpgrade-${upgrade.codeName}'>\n                    <div class='tooltip-top'>\n                        <img src='./images/smithUpgrade-${upgrade.codeName}.png'/>\n                        <p>${upgrade.name}</p>\n                    </div>\n                    <div class='tooltip-middle'>\n                        <p>${upgrade.desc}</p>\n                        <div class='cost'>\n                            <p>Requires:</p>\n                            <p>Refined Ores: ${upgrade.cost}</p>\n                            <p>Power Needed: ${beautifyNumber(upgrade.powerNeeded)}</p>\n                        </div>\n                    </div>\n                    `;\n            if (upgrade.flavorText) {\n                str += `\n                    <div class='tooltip-bottom'>\n                        <p>${upgrade.flavorText}</p>\n                    </div>`;\n            }\n\n            str += `\n                </div>\n            `;\n            break;\n\n        default:\n            console.log('no tooltip yet for this type:', tt.type);\n    }\n\n    tooltipWrapperEl.innerHTML = str;\n\n    switch (tt.type) {\n        default:\n            const tooltipWidth = 350;\n\n            tooltipWrapperEl.style.width = tooltipWidth + 'px';\n            tooltipWrapperEl.style.top = event.clientY - tooltipWrapperEl.getBoundingClientRect().height / 2 + 'px';\n            tooltipWrapperEl.style.left = gameContainerRight.getBoundingClientRect().left - tooltipWidth - 20 + 'px';\n    }\n};\n","import { getCodeName, getGeometricSequencePrice, isObjEmpty, sortObj } from './utils';\nimport { spend, updateOPS } from './index';\nimport { State, InstanceState } from './State';\nimport { UpdatesState } from './Updates';\nimport { showTooltip } from './Tooltip';\nimport { generateRisingText } from './RisingText';\n\nexport interface Building {\n    name: string;\n    codeName?: string;\n    namePlural: string;\n    desc: string;\n    flavorText: string;\n    baseProduction: number;\n    productionMultiplier?: number;\n    currentPrice?: number;\n    basePrice: number;\n    priceScale: number;\n    isLocked: boolean;\n    isHidden: boolean;\n    owned?: number;\n    buy?: Function;\n    mousemove?: Function;\n    onBuy?: any;\n}\n\nlet id = 0;\nconst Building = function (b) {\n    this.id = id;\n    this.name = b.name;\n    this.codeName = getCodeName(b.name);\n    this.namePlural = b.namePlural;\n    this.desc = b.desc;\n    this.flavorText = b.flavorText;\n    this.currentPrice = b.currentPrice || b.basePrice;\n    this.basePrice = b.basePrice;\n    this.priceScale = b.priceScale;\n    this.baseProduction = b.baseProduction;\n    this.productionMultiplier = b.productionMultiplier || 1;\n    this.isLocked = b.isLocked;\n    this.isHidden = b.isHidden;\n    this.owned = b.owned || 0;\n    this.onBuy = b.onBuy || null;\n    id += 1;\n\n    this.buy = (event) => {\n        if (spend(getGeometricSequencePrice(this))) {\n            this.owned += InstanceState.buyAmount;\n            this.currentPrice = this.basePrice * Math.pow(this.priceScale, this.owned);\n\n            updateOPS(); // Need to call the function directly so OPS gets calculated instantly\n\n            UpdatesState.updateOres = true;\n            UpdatesState.updateTabContent = true;\n\n            updateBuildingsVisibility(this.id);\n\n            if (this.onBuy) {\n                if (this.onBuy.unlockUpgrade) {\n                    this.onBuy.unlockUpgrade.forEach((upgrade) => {\n                        if (this.owned >= upgrade.amountNeeded) {\n                            State.upgrades[upgrade.name].isLocked = false;\n                            UpdatesState.updateTabContent = true;\n\n                            console.log('UPGRADES', State.upgrades);\n                        }\n                    });\n                }\n            }\n\n            generateRisingText(event, 'buy');\n            showTooltip(event, { type: 'building', building: this });\n        }\n    };\n\n    this.mousemove = (event) => showTooltip(event, { type: 'building', building: this });\n};\n\nconst updateBuildingsVisibility = (index: number) => {\n    const sortedBuildingsById: any = sortObj(State.buildings, id);\n\n    const nextBuilding: Building = sortedBuildingsById[index + 1][1];\n    const nextNextNextBuilding: Building = sortedBuildingsById[index + 3][1];\n\n    if (nextBuilding) nextBuilding.isLocked = false;\n    if (nextNextNextBuilding) nextNextNextBuilding.isHidden = false;\n};\n\nconst buildings: Building[] = [\n    {\n        name: 'School',\n        namePlural: 'Schools',\n        desc: 'Teach students about the wonders of ore.',\n        flavorText: \"Jesus christ Marie, they're minerals!\",\n        baseProduction: 0.5,\n        basePrice: 12,\n        priceScale: 1.12,\n        isLocked: false,\n        isHidden: false,\n        onBuy: {\n            unlockUpgrade: [\n                { name: 'Composition Notebooks', amountNeeded: 1 },\n                { name: 'No. 2 Pencil', amountNeeded: 5 },\n                { name: '3 Ring Binder', amountNeeded: 10 },\n                { name: 'Looseleaf', amountNeeded: 20 },\n                { name: 'Schoolbag', amountNeeded: 50 },\n                { name: 'Fresh Pink Eraser', amountNeeded: 100 },\n                { name: 'Gum', amountNeeded: 200 },\n                { name: 'Report Card', amountNeeded: 400 }\n            ]\n        }\n    },\n    {\n        name: 'Farm',\n        namePlural: 'Farms',\n        desc: 'Cultivate the lands for higher quality ores.',\n        flavorText: 'This totally makes sense...',\n        baseProduction: 2,\n        basePrice: 240,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: false,\n        onBuy: {\n            unlockUpgrade: [\n                { name: 'Manure Spreader', amountNeeded: 1 },\n                { name: 'Pitchfork', amountNeeded: 5 },\n                { name: 'Tractor', amountNeeded: 10 },\n                { name: 'Rotary Cutter', amountNeeded: 20 },\n                { name: 'Hoe', amountNeeded: 50 },\n                { name: 'Baler', amountNeeded: 100 },\n                { name: 'Sickle', amountNeeded: 200 },\n                { name: 'Scythe', amountNeeded: 400 }\n            ]\n        }\n    },\n    {\n        name: 'Quarry',\n        namePlural: 'Quarries',\n        desc: 'Designated mining area.',\n        flavorText: 'Diggy diggy hole.',\n        baseProduction: 20,\n        basePrice: 2_520,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: false,\n        onBuy: {\n            unlockUpgrade: [\n                { name: 'Floodlights', amountNeeded: 1 },\n                { name: 'Twill Rope', amountNeeded: 5 },\n                { name: 'Wooden Compass', amountNeeded: 10 },\n                { name: 'Ore Filter', amountNeeded: 20 },\n                { name: 'Waterproof Tape', amountNeeded: 50 },\n                { name: 'Metallic Compass', amountNeeded: 100 },\n                { name: 'Miners Mask', amountNeeded: 200 },\n                { name: 'Cape Chisel', amountNeeded: 400 }\n            ]\n        }\n    },\n    {\n        name: 'Church',\n        namePlural: 'Churches',\n        desc: 'Praise to ye Old Ore Gods.',\n        flavorText: 'In ore name we pray, amen.',\n        baseProduction: 320,\n        basePrice: 37_800,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true,\n        onBuy: {\n            unlockUpgrade: [\n                { name: 'Scripture Reading', amountNeeded: 1 },\n                { name: 'Communion', amountNeeded: 5 },\n                { name: 'Worship Session', amountNeeded: 10 },\n                { name: '7th Day', amountNeeded: 20 },\n                { name: 'Eden Apple', amountNeeded: 50 },\n                { name: 'Apocalypse', amountNeeded: 100 },\n                { name: 'Judgement Day', amountNeeded: 200 },\n                { name: 'Rapture', amountNeeded: 400 }\n            ]\n        }\n    },\n    {\n        name: 'Factory',\n        namePlural: 'Factories',\n        desc: 'Manufacture your ores.',\n        flavorText: 'Assembly line this SH%* up!',\n        baseProduction: 4_480,\n        basePrice: 490_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true,\n        onBuy: {\n            unlockUpgrade: [\n                { name: 'Rubber Conveyor Belt', amountNeeded: 1 },\n                { name: 'Floppy Squiggle Tubes', amountNeeded: 5 },\n                { name: 'Clicky Squish Buttons', amountNeeded: 10 },\n                { name: 'Metallic Magnetic Panels', amountNeeded: 20 },\n                { name: 'Hydroponic Auxilleration', amountNeeded: 50 }\n            ]\n        }\n    },\n    {\n        name: 'Crypt',\n        namePlural: 'Crypts',\n        desc: 'Raise dead ores from the graves.',\n        flavorText: 'Spooky dooky ores.',\n        baseProduction: 67_200,\n        basePrice: 7_900_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Hospital',\n        namePlural: 'Hospitals',\n        desc: 'Heal the poor ol damaged ores.',\n        flavorText: 'An apple a day keeps the ore cancer away.',\n        baseProduction: 1_350_000,\n        basePrice: 196_600_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Citadel',\n        namePlural: 'Citadels',\n        desc: 'wip',\n        flavorText: 'wip',\n        baseProduction: 14_800_000,\n        basePrice: 2_800_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Xeno Spaceship',\n        namePlural: 'Xeno Spaceships',\n        desc: 'wip',\n        flavorText: 'wip',\n        baseProduction: 192_200_000,\n        basePrice: 49_500_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Sky Castle',\n        namePlural: 'Sky Castles',\n        desc: 'Use magic beans to reach an egg based source of ores.',\n        flavorText: 'wip',\n        baseProduction: 3_800_000_000,\n        basePrice: 1_240_000_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Eon Portal',\n        namePlural: 'Eon Portals',\n        desc: 'Steal ore from your past and future self.',\n        flavorText: 'wip',\n        baseProduction: 45_150_000_000,\n        basePrice: 18_580_000_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Sacred Mine',\n        namePlural: 'Sacred Mines',\n        desc: 'wip',\n        flavorText: 'wip',\n        baseProduction: 691_900_000_000,\n        basePrice: 297_200_000_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'O.A.R.D.I.S.',\n        namePlural: 'O.A.R.D.I.S.',\n        desc: 'wip',\n        flavorText: 'wip',\n        baseProduction: 17_300_000_000_000,\n        basePrice: 8_915_000_000_000_000,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    },\n    {\n        name: 'Final Destination',\n        namePlural: 'Final Destinations',\n        desc: 'The Final Destination.',\n        flavorText: 'Thank you so much for playing <3.',\n        baseProduction: 999_999_999_999_999_999,\n        basePrice: 999_999_999_999_999_999_999_999_999_999_999,\n        priceScale: 1.15,\n        isLocked: true,\n        isHidden: true\n    }\n];\n\nexport const instantiateBuildings = (): void => {\n    const state = JSON.parse(localStorage.getItem('state'));\n\n    const builtBuildings = {};\n\n    if (state) {\n        if (!isObjEmpty(state.buildings)) {\n            for (let key in state.buildings) {\n                builtBuildings[key] = new Building(state.buildings[key]);\n            }\n        }\n    } else {\n        buildings.forEach((building) => {\n            builtBuildings[building.name] = new Building(building);\n        });\n    }\n\n    State.buildings = builtBuildings;\n};\n","import { getCodeName, removeEl } from './utils';\nimport { InstanceState, State } from './State';\nimport { spend, completeSmithUpgrade } from '.';\nimport { UpdatesState } from './Updates';\nimport { generateRisingText } from './RisingText';\nimport { hideTooltip } from './Tooltip';\n\n// once quest board is unlocked,\n// upgrade called Boots of Swiftness\n// that'll increase quest speed\nconst SECOND = 1000;\nconst MINUTE = 1000 * 60;\nconst HOUR = MINUTE * 60;\n\nexport interface SmithUpgrade {\n    name: string;\n    codeName?: string;\n    desc: string;\n    flavorText?: string;\n    powerNeeded: number;\n    cost: number;\n    requires?: {};\n    isLocked: boolean;\n    isInProgress?: boolean;\n    isNew?: boolean;\n    isOwned?: boolean;\n    isRepeatable?: boolean;\n    priceIncrease?: number;\n    complete?: () => void;\n    start?: () => void;\n    buy?: (event: MouseEvent) => void;\n    removeNew?: (event: MouseEvent) => void;\n    startedOn?: Date;\n    completedOn?: Date;\n    onComplete?: {};\n}\n\nconst SmithUpgrade = function (u) {\n    this.name = u.name;\n    this.codeName = getCodeName(u.name);\n    this.desc = u.desc;\n    this.flavorText = u.flavorText || null;\n    this.powerNeeded = u.powerNeeded;\n    this.cost = u.cost;\n    this.requires = u.requires || [];\n    this.isLocked = u.isLocked;\n    this.isInProgress = u.isInProgress || false;\n    this.isNew = u.isNew || true;\n    this.isOwned = u.isOwned || false;\n    this.isRepeatable = u.isRepeatable || false;\n    if (this.isRepeatable) this.priceIncrease = u.priceIncrease;\n    this.onComplete = u.onComplete || null;\n\n    this.complete = () => {\n        this.completedOn = new Date();\n        this.isInProgress = false;\n\n        UpdatesState.updateTabContent = true;\n        UpdatesState.updateTabs = true;\n\n        State.smith.currentProgress = 0;\n        State.smith.inProgress = false;\n        State.smith.currentUpgrade = this;\n\n        completeSmithUpgrade(this.codeName);\n\n        if (this.isRepeatable) {\n            this.powerNeeded *= this.priceIncrease;\n        }\n\n        if (this.onComplete) {\n            if (this.onComplete.unlockSmithUpgrade) {\n                this.onComplete.unlockSmithUpgrade.forEach((upgrade) => {\n                    unlockSmithUpgrade(upgrade, this.codeName);\n                });\n            }\n        }\n    };\n\n    this.start = () => {\n        console.log('starting a smith upgrade');\n        this.isInProgress = true;\n        this.startedOn = new Date();\n\n        UpdatesState.updateTabContent = true;\n        UpdatesState.updateTabs = true;\n\n        State.smith.currentProgress = 0;\n        State.smith.inProgress = true;\n        State.smith.currentUpgrade = this;\n    };\n\n    this.buy = (event: MouseEvent) => {\n        console.log('buying a smith upgrade', event);\n        if (!State.smith.inProgress) {\n            if (spend(this.cost, 'refined')) {\n                generateRisingText(event, 'buy');\n                hideTooltip();\n                this.start();\n            }\n        }\n    };\n\n    this.removeNew = (event: any) => {\n        this.isNew = false;\n        if (event.target.children[1]) {\n            removeEl(event.target.children[1]);\n        }\n    };\n};\n\nconst unlockSmithUpgrade = (targetUpgrade: string, previousUpgrade: string) => {\n    const upgrade = InstanceState.smithUpgrades.find((upgrade) => upgrade.codeName === targetUpgrade);\n\n    let unlock = true;\n\n    // Checks to see if there is a requires object\n    if (upgrade.requires) {\n        // Loop through the object\n        for (let upgradeName in upgrade.requires) {\n            // Check if key is equal to a just-completed upgrade\n            if (upgradeName === previousUpgrade) {\n                // Set to true (owned)\n                upgrade.requires[upgradeName] = true;\n            }\n            // If any values are false, don't unlock\n            if (upgrade.requires[upgradeName] === false) {\n                console.log('You dont own:', upgradeName);\n                unlock = false;\n            }\n        }\n    }\n\n    if (unlock) {\n        console.log('unlocking upgrade:', upgrade);\n        upgrade.isLocked = false;\n    }\n};\n\nconst smithUpgrades: SmithUpgrade[] = [\n    {\n        name: 'Fragility Spectacles',\n        desc: 'Allows you to spot \"weak spots\" within the ore. Hitting the weak spot generates 5x the normal amount.',\n        flavorText: 'I can see... I can FIGHT!',\n        powerNeeded: 15,\n        // powerNeeded: 150,\n        cost: 0,\n        isLocked: false,\n        onComplete: {\n            unlockSmithUpgrade: ['smithPowerUp']\n        }\n    },\n    {\n        name: 'Quest Board',\n        desc: 'Onwards to adventure! Go on quests to find greater rewards and even mysterious artifacts!',\n        flavorText: \"Fetch quests are the greatest aren't they?\",\n        powerNeeded: 1000,\n        cost: 1,\n        isLocked: false\n    },\n    {\n        name: 'Smith Power Up',\n        desc: 'Increase maximum smith power by a set amount',\n        powerNeeded: 100,\n        cost: 0,\n        isLocked: true,\n        requires: {\n            fragilitySpectacles: false\n        },\n        isRepeatable: true,\n        priceIncrease: 2.5\n    }\n];\n\nexport function instantiateSmithUpgrades(u = JSON.parse(localStorage.getItem('smithUpgrades')) || smithUpgrades) {\n    const builtSmithUpgrades: SmithUpgrade[] = [];\n\n    u.forEach((upgrade: SmithUpgrade) => {\n        builtSmithUpgrades.push(new SmithUpgrade(upgrade));\n    });\n\n    InstanceState.smithUpgrades = builtSmithUpgrades;\n}\n","import { InstanceState } from './State';\nimport { createEl, removeEl } from './utils';\nimport { toastsContainerEl, toastsContainerLeftEl, toastsContainerRightEl } from './constants';\n\nlet toastIndex = 0;\n\nexport const Toast = function (type, achievement?) {\n    const toastEl = createEl('div', ['toast', `toast-${toastIndex}`]);\n\n    this.id = toastIndex;\n    this.self = toastEl;\n\n    this.close = () => {\n        this.self.addEventListener('transitionend', () => removeEl(this.self));\n        this.self.classList.add('close');\n    };\n\n    InstanceState.toasts.push(this);\n    toastIndex++;\n\n    switch (type) {\n        case 'achievement':\n            toastEl.classList.add('toast-achievement');\n            const closeBtn = createEl('svg');\n            closeBtn.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-x\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n                </svg>\n            `;\n            closeBtn.addEventListener('click', () => this.close());\n            toastEl.innerHTML = `\n                <div class='toast-top'>\n                    <img src='https://via.placeholder.com/32/'>\n                    <h2 class='achievement-name'>${achievement.name}</h2>\n                </div>\n                <div class='toast-middle'>${achievement.desc}</div>\n            `;\n\n            toastEl.append(closeBtn);\n            toastsContainerLeftEl.append(toastEl);\n            break;\n\n        case 'notification':\n            toastsContainerRightEl.append(toastEl);\n            break;\n\n        default:\n            console.log('type not recognized', type);\n    }\n};\n","import { getCodeName, isObjEmpty } from './utils';\nimport { Toast } from './Toast';\nimport { State } from './State';\n\ninterface Achievement {\n    name: string;\n    desc: string;\n}\n\nconst Achievement = function (achievement) {\n    this.name = achievement.name;\n    this.codeName = getCodeName(achievement.name);\n    this.desc = achievement.desc;\n    this.isWon = achievement.won || false;\n\n    this.win = () => {\n        if (!this.isWon) {\n            this.isWon = true;\n            new Toast('achievement', this);\n        }\n    };\n};\n\nlet achievements: Achievement[] = [\n    { name: 'Newbie Miner', desc: 'Break your first rock' },\n    { name: 'Novice Miner', desc: 'Break 10 rocks' },\n    { name: 'Intermediate Miner', desc: 'Break 25 rocks' },\n    { name: 'Advanced Miner', desc: 'Break 50 rocks' },\n    { name: 'Master Miner', desc: 'Break 100 rocks' },\n    { name: 'Chief Miner', desc: 'Break 200 rocks' },\n    { name: 'Exalted Miner', desc: 'Break 500 rocks' },\n    { name: 'God Miner', desc: 'Break 1000 rocks' },\n\n    { name: 'Combo Baby', desc: 'Reach a 5 hit combo' },\n    { name: 'Combo Pleb', desc: 'Reach a 20 hit combo' },\n    { name: 'Combo Squire', desc: 'Reach a 50 hit combo' },\n    { name: 'Combo Knight', desc: 'Reach a 100 hit combo' },\n    { name: 'Combo King', desc: 'Reach a 200 hit combo' },\n    { name: 'Combo Master', desc: 'Reach a 350 hit combo' },\n    { name: 'Combo Devil', desc: 'Reach a 666 hit combo' },\n    { name: 'Combo Jackpot', desc: 'Reach a 777 hit combo' },\n    { name: 'Combo God', desc: 'Reach a 1000 hit combo' },\n    { name: 'Combo Saiyan', desc: 'Reach a 5000 hit combo' },\n    { name: 'Combo Saitama', desc: 'Reach a 10000 hit combo' },\n\n    { name: 'Not Even A Scratch', desc: 'Deal more than 100 damage from a hit' },\n    { name: 'Didnt Even Hurt', desc: 'Deal more than 1,000 damage from a hit' },\n    { name: 'That Tickled', desc: 'Deal more than 100,000 damage from a hit' },\n    { name: 'I Felt That', desc: 'Deal more than 1,000,000 damage from a hit' },\n\n    { name: 'Ore-aid Stand', desc: 'Reach 50 OpS' },\n    { name: 'Ore Store', desc: 'Reach 10,000 OpS' },\n    { name: '401k', desc: 'Reach 401,000 OpS' },\n    { name: 'Retirement Plan', desc: 'Reach 5,000,000 OpS' },\n    { name: 'Hedge Fund', desc: '1,000,000,000 OpS' }\n];\n\nexport const instantiateAchievements = (): void => {\n    const state = JSON.parse(localStorage.getItem('state'));\n\n    const builtAchievements = {};\n\n    if (state) {\n        if (!isObjEmpty(state.achievements)) {\n            for (let key in state.achievements) {\n                builtAchievements[key] = new Achievement(state.achievements[key]);\n            }\n        }\n    } else {\n        achievements.forEach((achievement) => {\n            builtAchievements[achievement.name] = new Achievement(achievement);\n        });\n    }\n\n    State.achievements = builtAchievements;\n};\n","import { Upgrade } from '../Upgrades';\n\nexport const schoolUpgrades: Upgrade[] = [\n    {\n        name: 'Composition Notebooks',\n        flavorText: 'College ruled!',\n        price: 300,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'No. 2 Pencil',\n        flavorText: 'Test ready!',\n        price: 1_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: '3 Ring Binder',\n        flavorText: 'Be the Lord of the Rings with our new 2.5\" binder!',\n        price: 12_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'Looseleaf',\n        flavorText: '\"Can I borrow a sheet?\"',\n        price: 450_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'Schoolbag',\n        flavorText: 'Break your back carrying on of these stylish bags!',\n        price: 5_500_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 2]\n        }\n    },\n    {\n        name: 'Fresh Pink Eraser',\n        flavorText: 'Never use this. Keep it pristine.',\n        price: 22_500_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'Gum',\n        flavorText: \"With this, you'll be the most popular kid in the class.\",\n        price: 620_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'Hallpass',\n        flavorText: 'Wander the halls without a care in the world.',\n        price: 3_000_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    },\n    {\n        name: 'Report Card',\n        flavorText: 'Determines your fate for the upcoming months.',\n        price: 82_000_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['School', 1]\n        }\n    }\n];\n","import { Upgrade } from '../Upgrades';\n\nexport const farmUpgrades: Upgrade[] = [\n    {\n        name: 'Manure Spreader',\n        flavorText: 'The poop helps the ore mature.',\n        price: 950,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Pitchfork',\n        flavorText: 'Torches not included...',\n        price: 12_500,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Tractor',\n        flavorText: 'Im in me mums tractor.',\n        price: 265_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Rotary Cutter',\n        flavorText: 'Not even grass can stop us now.',\n        price: 3_450_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Hoe',\n        flavorText: 'hehe...',\n        price: 69_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Baler',\n        flavorText: '\"Baler? I hardly know her.\"',\n        price: 400_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Sickle',\n        flavorText: 'For easy sickle-ing of course.',\n        price: 4_700_300_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    },\n    {\n        name: 'Scythe',\n        flavorText: \"It's like a sickle... but bigger.\",\n        price: 70_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Farm', 1]\n        }\n    }\n];\n","import { Upgrade } from '../Upgrades';\n\nexport const quarryUpgrades: Upgrade[] = [\n    {\n        name: 'Floodlights',\n        flavorText: 'Staring into one of them is like starting into a billion suns.',\n        price: 1_900,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Twill Rope',\n        flavorText: 'Study enuff...',\n        price: 11_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Wooden Compass',\n        flavorText: 'Responds to ore magnetism.',\n        price: 510_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Ore Filter',\n        flavorText: 'Less sorting, more ore.',\n        price: 7_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Waterproof Tape',\n        flavorText: 'Poor mans Flex Tape®',\n        price: 80_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Metallic Compass',\n        flavorText: 'Looks cooler, does the same thing.',\n        price: 210_500_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Miners Mask',\n        flavorText: 'Asbestos be gone!',\n        price: 5_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Cape Chisel',\n        flavorText: 'Faster than mining!',\n        price: 27_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Ore Splitter',\n        flavorText: 'Right down the middle',\n        price: 600_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    },\n    {\n        name: 'Laser Drill',\n        flavorText: 'tbd',\n        price: 6_300_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Quarry', 1]\n        }\n    }\n];\n","import { Upgrade } from '../Upgrades';\n\nexport const churchUpgrades: Upgrade[] = [\n    {\n        name: 'Scripture Reading',\n        flavorText: 'Read the words of our l-ore-d and savior.',\n        price: 60_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 1]\n        }\n    },\n    {\n        name: 'Communion',\n        flavorText: 'Note: Not communism.',\n        price: 740_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 1]\n        }\n    },\n    {\n        name: 'Worship Session',\n        flavorText: 'More like W-ore-ship... haha...',\n        price: 2_800_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 1]\n        }\n    },\n    {\n        name: '7th Day',\n        flavorText: 'You would think a day of worship is one less day of work but somehow it works out to more ore!',\n        price: 62_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 1]\n        }\n    },\n    {\n        name: 'Eden Apple',\n        flavorText: \"You can't resist this forbidden fruit.\",\n        price: 777_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 1]\n        }\n    },\n    {\n        name: 'Apocalypse',\n        flavorText: 'Hell on earth.',\n        price: 8_200_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 4]\n            // change_building_image: 'building-church-evil',\n            // change_building_desc: 'Praise to the Ore Demons',\n        }\n    },\n    {\n        name: 'Judgement Day',\n        flavorText: \"It's the end of the world.\",\n        price: 32_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 3]\n        }\n    },\n    {\n        name: 'Rapture',\n        flavorText: 'Are you saved?',\n        price: 700_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 3]\n        }\n    },\n    {\n        name: 'Chaos',\n        flavorText: '...',\n        price: 2_450_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 2]\n        }\n    },\n    {\n        name: 'Satanic Ritual',\n        flavorText: 'Sacrifices are the only way to appease the demons.',\n        price: 33_000_000_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Church', 2]\n        }\n    }\n];\n","import { Upgrade } from '../Upgrades';\n\nexport const factoryUpgrades: Upgrade[] = [\n    {\n        name: 'Rubber Conveyor Belt',\n        flavorText: \"These moves the things to there, that's all I know.\",\n        price: 30_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Factory', 1]\n        }\n    },\n    {\n        name: 'Floppy Squiggle Tubes',\n        flavorText: \"If I could tell you what these were for you'd buy twice as many.\",\n        price: 300_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Factory', 1]\n        }\n    },\n    {\n        name: 'Clicky Squish Buttons',\n        flavorText: 'These go next to the Squishy Click Buttons.',\n        price: 44_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Factory', 1]\n        }\n    },\n    {\n        name: 'Metallic Magnetic Panels',\n        flavorText: 'These are actually for my fridge.',\n        price: 800_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Factory', 1]\n        }\n    },\n    {\n        name: 'Hydroponic Auxilleration',\n        flavorText: 'Aquaman is here to stay.',\n        price: 5_300_000_000,\n        onBuy: {\n            increaseBuildingProductionMultiplier: ['Factory', 1]\n        }\n    }\n];\n","import { schoolUpgrades } from './schoolUpgrades';\nimport { farmUpgrades } from './farmUpgrades';\nimport { quarryUpgrades } from './quarryUpgrades';\nimport { churchUpgrades } from './churchUpgrades';\nimport { factoryUpgrades } from './factoryUpgrades';\n\nexport const upgrades = {\n    schoolUpgrades,\n    farmUpgrades,\n    quarryUpgrades,\n    churchUpgrades,\n    factoryUpgrades\n};\n","import { findCodeNameInArr, isObjEmpty, getCodeName, removeEl, select, isElEmpty } from './utils';\nimport { State, InstanceState } from './State';\nimport { Building } from './Buildings';\nimport { showTooltip, hideTooltip } from './Tooltip';\nimport { upgrades as u } from './upgrades/index';\nimport { spend } from '.';\nimport { UpdatesState } from './Updates';\n\nexport interface Upgrade {\n    name: string;\n    flavorText?: string;\n    price: number;\n    onBuy: {\n        increaseBuildingProductionMultiplier: [string, number];\n    };\n}\n\nconst Upgrade = function (upgrade) {\n    this.name = upgrade.name;\n    this.codeName = getCodeName(upgrade.name);\n    this.desc = upgrade.desc || buildUpgradeDesc(upgrade);\n    this.flavorText = upgrade.flavorText;\n    this.price = upgrade.price;\n    this.onBuy = upgrade.onBuy;\n    this.isLocked = upgrade.isLocked === false ? false : true;\n    this.isOwned = upgrade.isOwned === false ? false : false;\n\n    this.buy = (event: MouseEvent) => {\n        if (spend(this.price)) {\n            this.isOwned = true;\n\n            if (this.onBuy) {\n                if (this.increaseBuildingProductionMultiplier) {\n                }\n            }\n\n            const upgradeEl: EventTarget = event.target;\n            const upgradesContainerEl = select('.upgrades-container');\n            removeEl(upgradeEl as HTMLElement);\n            if (isElEmpty(upgradesContainerEl)) UpdatesState.updateTabContent = true;\n        }\n    };\n\n    this.mousemove = (event: MouseEvent): void => showTooltip(event, { type: 'upgrade', upgrade: this });\n};\n\nconst buildUpgradeDesc = (upgrade) => {\n    const building: Building = State.buildings[upgrade.onBuy.increaseBuildingProductionMultiplier[0]];\n\n    let desc = `Increases the production multiplier of ${building.namePlural} by ${upgrade.onBuy.increaseBuildingProductionMultiplier[1]}`;\n\n    return desc;\n};\n\nconst upgrades = [...u.schoolUpgrades, ...u.farmUpgrades, ...u.quarryUpgrades, ...u.churchUpgrades, ...u.factoryUpgrades];\n\nexport const instantiateUpgrades = (): void => {\n    const state = JSON.parse(localStorage.getItem('state'));\n\n    const builtUpgrades = {};\n\n    if (state) {\n        if (!isObjEmpty(state.upgrades)) {\n            for (let key in state.upgrades) {\n                builtUpgrades[key] = new Upgrade(state.upgrades[key]);\n            }\n        }\n    } else {\n        upgrades.forEach((upgrade) => {\n            builtUpgrades[upgrade.name] = new Upgrade(upgrade);\n        });\n    }\n\n    State.upgrades = builtUpgrades;\n};\n","import { State, InstanceState } from './State';\nimport { UpdatesState } from './Updates';\n\nimport * as constants from './constants';\nimport {\n    select,\n    getPercentage,\n    formatNumber,\n    getRandomNum,\n    removeEl,\n    updateEl,\n    createEl,\n    beautifyNumber,\n    getGeometricSequencePrice,\n    findCodeNameInArr,\n    getRandomFromArr,\n    sortObj\n} from './utils';\nimport { generateOreParticles } from './OreParticle';\nimport { generateRisingText } from './RisingText';\nimport { instantiateTabs, TabName, Tab } from './Tabs';\nimport { instantiateBuildings, Building } from './Buildings';\nimport { showTooltip, hideTooltip } from './Tooltip';\nimport { Toast } from './Toast';\nimport { instantiateSmithUpgrades } from './SmithUpgrades';\nimport { instantiateAchievements } from './Achievements';\nimport { instantiateUpgrades } from './Upgrades';\n\nconst gainOre = (amount: number, damageOre: boolean = true) => {\n    State.inventory.ores += amount;\n\n    if (damageOre) handleOreDamage(amount);\n    UpdatesState.updateOres = true;\n};\n\nexport const spend = (amount: number, type: 'ores' | 'refined' = 'ores'): boolean => {\n    if (State.inventory[type] >= amount) {\n        State.inventory.ores -= amount;\n        return true;\n    }\n\n    return false;\n};\n\nconst handleOreDamage = (damage: number) => {\n    State.ore.hp -= damage;\n\n    if (State.ore.hp <= 0) handleBrokenOre();\n\n    UpdatesState.updateOreSprite = true;\n    UpdatesState.updateOreHp = true;\n};\n\nconst handleBrokenOre = () => {\n    gainGenerationXp(50);\n    generateNewOre();\n    State.ore.spriteType = getRandomNum(1, 5);\n\n    State.stats.rocksDestroyed++;\n    if (State.stats.rocksDestroyed === 1) winAchievement('Newbie Miner');\n    if (State.stats.rocksDestroyed === 10) winAchievement('Novice Miner');\n    if (State.stats.rocksDestroyed === 25) winAchievement('Intermediate Miner');\n    if (State.stats.rocksDestroyed === 50) winAchievement('Advanced Miner');\n    if (State.stats.rocksDestroyed === 100) winAchievement('Master Miner');\n    if (State.stats.rocksDestroyed === 200) winAchievement('Chief Miner');\n    if (State.stats.rocksDestroyed === 500) winAchievement('Exalted Miner');\n    if (State.stats.rocksDestroyed === 1000) winAchievement('God Miner');\n\n    if (State.stats.rocksDestroyed === 1) unlockTab('smith');\n};\n\nconst generateNewOre = () => {\n    State.ore.maxHp *= 1.13;\n    State.ore.hp = State.ore.maxHp;\n};\n\nconst updateComboSign = () => {\n    if (!constants.comboSignEl.classList.contains('visible')) instantiateComboSign();\n    constants.comboSignNumberEl.innerHTML = `${State.stats.currentCombo}`;\n};\n\nconst handleOreClick = (event: MouseEvent, weakSpotClick: boolean = false) => {\n    let amount = State.opc;\n\n    if (weakSpotClick) {\n        amount *= State.stats.weakSpotMultiplier;\n        State.stats.weakSpotClicks++;\n        State.stats.currentCombo++;\n\n        gainGenerationXp(3);\n        generateRisingText(event, 'weakSpot', amount);\n\n        if (State.stats.currentCombo % 5 === 0) generateRisingText(event, 'combo', State.stats.currentCombo);\n        if (State.stats.currentCombo > State.stats.highestCombo) State.stats.highestCombo = State.stats.currentCombo;\n\n        if (State.stats.currentCombo === 5) winAchievement('Combo Baby');\n        if (State.stats.currentCombo === 20) winAchievement('Combo Pleb');\n        if (State.stats.currentCombo === 50) winAchievement('Combo Squire');\n        if (State.stats.currentCombo === 100) winAchievement('Combo Knight');\n        if (State.stats.currentCombo === 200) winAchievement('Combo King');\n        if (State.stats.currentCombo === 350) winAchievement('Combo Master');\n        if (State.stats.currentCombo === 666) winAchievement('Combo Devil');\n        if (State.stats.currentCombo === 777) winAchievement('Combo Jackpot');\n        if (State.stats.currentCombo === 1000) winAchievement('Combo God');\n        if (State.stats.currentCombo === 5000) winAchievement('Combo Saiyan');\n        if (State.stats.currentCombo === 10000) winAchievement('Combo Saitama');\n        generateWeakSpot();\n    } else {\n        if (State.stats.currentCombo > 0) {\n            State.stats.currentCombo = 0;\n        }\n        gainGenerationXp(1);\n        generateRisingText(event, null, amount);\n    }\n\n    if (amount >= 100) winAchievement('Not Even A Scratch');\n    if (amount >= 1_000) winAchievement('Didnt Even Hurt');\n    if (amount >= 100_000) winAchievement('That Tickled');\n    if (amount >= 1_000_000) winAchievement('I Felt That');\n\n    updateComboSign();\n    gainOre(amount);\n    generateOreParticles(event);\n\n    State.stats.oreClicks++;\n};\n\nconst generateWeakSpot = () => {\n    let weakSpot = select('.weak-spot');\n    if (!weakSpot) {\n        weakSpot = createEl('div', ['weak-spot']);\n        weakSpot.addEventListener('click', (event: MouseEvent) => handleOreClick(event, true));\n        constants.oreSpriteContainerEl.append(weakSpot);\n    }\n\n    const x = getRandomNum(0, constants.oreSpriteContainerEl.offsetWidth - 20);\n    const y = getRandomNum(0, constants.oreSpriteContainerEl.offsetHeight - 20);\n\n    weakSpot.style.left = x + 'px';\n    weakSpot.style.bottom = y + 'px';\n};\n\nconst winAchievement = (achievementName: string) => {\n    const achievement = State.achievements[achievementName];\n    achievement.win();\n};\n\n// - -----------------------------------------------------------------------------------\n// - GENERATION STUFF ------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nconst gainGenerationXp = (amount: number) => {\n    State.generation.xp += amount;\n    if (State.generation.xp >= State.generation.maxXp) handleGenerationLvlUp();\n    UpdatesState.updateGenerationXp = true;\n};\n\nconst handleGenerationLvlUp = () => {\n    State.generation.maxXp *= 1.15;\n    State.generation.xp = 0;\n    State.generation.lvOnRefine += 1;\n\n    UpdatesState.updateGenerationLvOnRefine = true;\n};\n\n// - -----------------------------------------------------------------------------------\n// - UPDATES ---------------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nconst updateOres = () => {\n    let str = beautifyNumber(State.inventory.ores);\n\n    if (State.ops > 0) {\n        str += ` <span class='ops'>(${State.ops}/s)</span>`;\n    }\n\n    constants.topbarInventoryOresEl.innerHTML = `${str}`;\n\n    UpdatesState.updateOres = false;\n};\n\nconst updateOreHp = () => {\n    switch (State.settings.oreHpType) {\n        case 'percentage':\n            constants.oreHpEl.innerHTML = `${formatNumber(getPercentage(State.ore.hp, State.ore.maxHp))}%`;\n            break;\n        case 'number':\n            constants.oreHpEl.innerHTML = `${formatNumber(State.ore.hp)}/${formatNumber(State.ore.maxHp)}`;\n            break;\n        case 'none':\n        default:\n            return;\n    }\n    UpdatesState.updateOreHp = false;\n};\n\nconst updateOreSprite = () => {\n    constants.oreSpriteEl.src = `./images/ore${State.ore.spriteType}-${State.ore.spriteHp}.png`;\n\n    const differentOreSprites = 5;\n    const percentage = getPercentage(State.ore.hp, State.ore.maxHp);\n    const calcSprite = Math.min(differentOreSprites, 6 - Math.ceil(percentage / 20));\n\n    if (State.ore.spriteHp !== calcSprite) {\n        State.ore.spriteHp = calcSprite;\n        constants.oreSpriteEl.src = `./images/ore${State.ore.spriteType}-${State.ore.spriteHp}.png`;\n        generateOreParticles(null, 5);\n    }\n\n    UpdatesState.updateOreSprite = false;\n};\n\nconst updateGenerationLv = () => {\n    constants.topbarInventoryGenerationLv.innerHTML = `${State.generation.lv}`;\n    UpdatesState.updateGenerationLv = false;\n};\n\nconst updateGenerationLvOnRefine = () => {\n    if (State.generation.lv < State.generation.lvOnRefine) {\n        constants.topbarInventoryGenerationLvOnRefine.innerHTML = `(${State.generation.lvOnRefine})`;\n    }\n    UpdatesState.updateGenerationLvOnRefine = false;\n};\n\nconst updateGenerationXp = () => {\n    constants.topbarInventoryGenerationXpBarEl.style.width = getPercentage(State.generation.xp, State.generation.maxXp) + '%';\n    UpdatesState.updateGenerationXp = false;\n};\n\nexport const updateOPS = () => {\n    let ops = 0;\n\n    for (const b in State.buildings) {\n        const building: Building = State.buildings[b];\n        ops += building.baseProduction * building.productionMultiplier * building.owned;\n    }\n\n    State.ops = ops;\n\n    if (ops >= 50) winAchievement('Ore-aid Stand');\n    if (ops >= 10000) winAchievement('Ore Store');\n    if (ops >= 401000) winAchievement('401k');\n    if (ops >= 5_000_000) winAchievement('Retirement Plan');\n    if (ops >= 1_000_000_000) winAchievement('Hedge Fund');\n\n    UpdatesState.updateOPS = false;\n};\n\nconst changeBuyAmount = (amount) => {\n    InstanceState.buyAmount = amount;\n    UpdatesState.updateTabContent = true;\n};\n\nconst updateStorePriceClasses = () => {\n    for (const building in State.buildings) {\n        const b: Building = State.buildings[building];\n        if (!b.isHidden && !b.isLocked) {\n            const buildingPriceEl = document.querySelector(`.building-${b.codeName} .building-price`);\n            if (State.inventory.ores >= getGeometricSequencePrice(b)) {\n                if (buildingPriceEl.classList.contains('not-enough')) buildingPriceEl.classList.remove('not-enough');\n            } else {\n                if (!buildingPriceEl.classList.contains('not-enough')) buildingPriceEl.classList.add('not-enough');\n            }\n        }\n    }\n\n    for (const upgrade in State.upgrades) {\n        const u = State.upgrades[upgrade];\n        if (!u.isLocked && !u.isOwned) {\n            const upgradeEl = document.querySelector(`.upgrade-${u.codeName}`);\n            if (State.inventory.ores >= u.price) {\n                if (upgradeEl.classList.contains('not-enough')) upgradeEl.classList.remove('not-enough');\n            } else {\n                if (!upgradeEl.classList.contains('not-enough')) upgradeEl.classList.add('not-enough');\n            }\n        }\n    }\n};\n\n// - -----------------------------------------------------------------------------------\n// - SMITH STUFF -----------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nconst updateSmithProgress = () => {\n    if (State.smith.currentProgress >= State.smith.currentUpgrade.powerNeeded) return;\n\n    const powerPerTick = State.smith.power / State.settings.tick;\n\n    if (spend(powerPerTick)) {\n        State.smith.currentProgress += powerPerTick;\n\n        updateSmithProgressBar();\n    }\n};\n\nconst updateSmithProgressBar = () => {\n    const tabProgressBar = select('.smith-tab-progress-bar .bar');\n    const percentage = getPercentage(State.smith.currentProgress, State.smith.currentUpgrade.powerNeeded);\n\n    tabProgressBar.style.width = percentage + '%';\n    tabProgressBar.style.filter = `grayscale( ${100 - percentage}% )`;\n\n    if (InstanceState.selectedTab === 'smith') {\n        if (percentage >= 100) {\n            UpdatesState.updateTabContent = true;\n            return;\n        }\n\n        const progressBar = select('.smith-progress-bar .bar');\n\n        progressBar.style.filter = `grayscale( ${100 - percentage}% )`;\n        progressBar.style.width = percentage + '%';\n    }\n};\n\nexport const completeSmithUpgrade = (codeName: string) => {\n    InstanceState.smithUpgrades.forEach((upgrade) => {\n        if (upgrade.codeName === codeName) {\n            upgrade.isOwned = true;\n\n            switch (codeName) {\n                case 'fragilitySpectacles':\n                    generateWeakSpot();\n                    break;\n                case 'smithPowerUp':\n                    State.smith.maxPower *= 1.5;\n                    break;\n                default:\n                    console.log('default case firing', codeName);\n            }\n\n            return;\n        }\n    });\n};\n\nconst updateSmithPower = (power) => {\n    const el = select('.smith-power');\n    State.smith.power = power;\n    el.innerHTML = power;\n};\n\n// - -----------------------------------------------------------------------------------\n// - TAB BUILD STUFF -------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nconst updateTabs = (): void => {\n    const tabsContainer = document.createElement('div');\n    tabsContainer.classList.add('tabs-container');\n\n    InstanceState.tabs\n        .filter((tab: Tab) => !tab.isLocked)\n        .forEach((tab: Tab) => {\n            const tabEl = createEl('div', ['tab', `tab-${tab.codeName}`]);\n\n            tabEl.addEventListener('click', () => changeTab(tab.codeName));\n\n            if (InstanceState.selectedTab === tab.codeName) tabEl.classList.add('tab-selected');\n\n            tabEl.innerHTML = tab.name;\n            if (tab.codeName === 'smith' && State.smith.inProgress) {\n                tabEl.innerHTML = `\n                    ${tab.name}\n                    <div class='smith-tab-progress-bar'>\n                        <div class='bar'></div>\n                    </div>\n                `;\n            }\n\n            tabsContainer.append(tabEl);\n        });\n\n    updateEl(constants.tabsWrapperEl, tabsContainer);\n\n    UpdatesState.updateTabs = false;\n};\n\nconst changeTab = (tab: TabName): void => {\n    if (InstanceState.selectedTab !== tab) {\n        InstanceState.selectedTab = tab;\n        UpdatesState.updateTabs = true;\n        updateTabContent();\n    }\n};\n\nconst unlockTab = (tabName: string): void => {\n    InstanceState.tabs.forEach((tab) => {\n        if (tab.codeName === tabName) {\n            tab.isLocked = false;\n            UpdatesState.updateTabs = true;\n            return;\n        }\n    });\n};\n\nconst updateTabContent = (): void => {\n    const tabsContentContainer = document.createElement('div');\n    tabsContentContainer.classList.add('tabs-content-container');\n\n    let tabContent;\n\n    switch (InstanceState.selectedTab) {\n        case 'store':\n            tabContent = buildStoreTabContent();\n            break;\n        case 'smith':\n            tabContent = buildSmithTabContent();\n            break;\n        default:\n            console.log('not built yet');\n    }\n\n    tabsContentContainer.append(tabContent);\n    updateEl(constants.tabsContentWrapperEl, tabsContentContainer);\n\n    UpdatesState.updateTabContent = false;\n};\n\nconst buildStoreTabContent = (): HTMLElement => {\n    const storeTabContainer = createEl('div', ['tab-content', 'tab-content-store']);\n\n    const upgradesContainer = buildUpgrades();\n    const buyAmountContainer = buildBuyAmountContainer();\n    const buildingsContainer = buildBuildings();\n\n    if (upgradesContainer.innerHTML) storeTabContainer.append(upgradesContainer);\n    storeTabContainer.append(buyAmountContainer);\n    storeTabContainer.append(buildingsContainer);\n\n    return storeTabContainer;\n};\n\nconst buildUpgrades = (): HTMLElement => {\n    const upgradesContainer = createEl('div', ['upgrades-container']);\n    upgradesContainer.addEventListener('mouseenter', () => resizeUpgradesContainer('enter'));\n    upgradesContainer.addEventListener('mouseleave', () => resizeUpgradesContainer('leave'));\n\n    sortObj(State.upgrades, 'price')\n        .filter((upgrade: any) => !upgrade[1].isOwned && !upgrade[1].isLocked)\n        .forEach((upgrade: any) => {\n            const upgradeEl = createEl(\n                'div',\n                ['upgrade', `upgrade-${upgrade[1].codeName}`, `${State.inventory.ores < upgrade[1].price && 'not-enough'}`],\n                `\n                <img src='./images/upgrade-${upgrade[1].codeName}.png'/>\n            `\n            );\n            upgradeEl.addEventListener('click', (event: MouseEvent) => upgrade[1].buy(event));\n            upgradeEl.addEventListener('mousemove', (event: MouseEvent) => upgrade[1].mousemove(event));\n            upgradeEl.addEventListener('mouseleave', (event: MouseEvent) => hideTooltip());\n            upgradesContainer.append(upgradeEl);\n        });\n\n    return upgradesContainer;\n};\n\nconst resizeUpgradesContainer = (type: 'enter' | 'leave') => {\n    const upgradesContainer: HTMLElement = select('.upgrades-container');\n    if (type === 'enter') upgradesContainer.style.height = upgradesContainer.scrollHeight + 'px';\n    if (type === 'leave') upgradesContainer.style.height = '60px';\n};\n\nconst buildBuildings = (): HTMLElement => {\n    const buildingsContainer = createEl('div', ['buildings-container']);\n\n    for (let b in State.buildings) {\n        const building = State.buildings[b];\n        if (!building.isHidden) {\n            const buildingEl = createEl('div', ['building', `building-${building.codeName}`, `${building.isLocked && 'locked'}`]);\n            const price = getGeometricSequencePrice(building);\n\n            let str = `<img class='building-img' src='./images/building-${building.codeName}.png' />`;\n\n            if (!building.isLocked) {\n                str += `\n                    <div class='building-left'>\n                        <p class='building-name'>${building.name} ${InstanceState.buyAmount != 1 ? `x${InstanceState.buyAmount}` : ''}</p>\n                        <p class='building-price'>\n                            <img src='./images/ore.png' />\n                            ${beautifyNumber(price)}\n                        </p>\n                    </div>\n                    <p class='building-owned'>${building.owned}</p>\n                `;\n            }\n\n            buildingEl.innerHTML = str;\n\n            if (!building.isLocked) {\n                buildingEl.addEventListener('click', (event) => building.buy(event));\n                buildingEl.addEventListener('mousemove', (event) => building.mousemove(event));\n                buildingEl.addEventListener('mouseleave', () => hideTooltip());\n            }\n\n            buildingsContainer.append(buildingEl);\n        }\n    }\n\n    return buildingsContainer;\n};\n\nconst buildBuyAmountContainer = (): HTMLElement => {\n    const buyAmountContainer = document.createElement('div');\n    buyAmountContainer.classList.add('buy-amount-container');\n\n    const buyAmountText = createEl('p', ['buy-amount-text'], 'Buy Amount');\n\n    const buyAmounts = document.createElement('div');\n    buyAmounts.classList.add('buy-amounts');\n\n    const buyAmountChoices = [1, 10, 100, 'max'];\n    buyAmountChoices.forEach((amount) => {\n        const buyAmount = createEl('p', ['buy-amount'], amount);\n        buyAmount.addEventListener('click', () => changeBuyAmount(amount));\n        if (amount === InstanceState.buyAmount) {\n            buyAmount.classList.add('selected');\n        }\n        buyAmounts.append(buyAmount);\n    });\n\n    buyAmountContainer.append(buyAmountText);\n    buyAmountContainer.append(buyAmounts);\n\n    return buyAmountContainer;\n};\n\nconst buildSmithTabContent = (): HTMLElement => {\n    const smithTabContentContainer = createEl('div', ['tab-content', 'tab-content-smith']);\n    const underTabBar = createEl('div', ['under-tab-bar']);\n\n    const smithSettingsContainer = buildSmithSettings();\n    const smithProgressContainer = State.smith.inProgress ? buildSmithProgressContainer() : '';\n    const smithUpgradesContainer = buildSmithUpgrades();\n\n    smithTabContentContainer.append(underTabBar);\n    smithTabContentContainer.append(smithSettingsContainer);\n    smithTabContentContainer.append(smithProgressContainer);\n    smithTabContentContainer.append(smithUpgradesContainer);\n\n    return smithTabContentContainer;\n};\n\nconst buildSmithProgressContainer = (): HTMLElement => {\n    const smithProgressContainer = createEl('div', ['smith-progress-container']);\n    const upgrade = State.smith.currentUpgrade;\n    const percentage = getPercentage(State.smith.currentProgress, upgrade.powerNeeded);\n\n    const smithProgressTopEl = createEl(\n        'div',\n        ['smith-progress-top'],\n        `\n        <p class='smith-upgrade-name'>${upgrade.name}</p>\n        `\n    );\n\n    const collectBtn = createEl('button', ['collect-btn'], 'COLLECT');\n    collectBtn.addEventListener('click', () => upgrade.complete());\n\n    const smithProgressBottom =\n        percentage >= 100\n            ? collectBtn\n            : createEl(\n                  'div',\n                  ['smith-progress-bar'],\n                  ` <div class='smith-progress-bar'>\n                        <div class='bar'></div>\n                    </div>`\n              );\n\n    const div = createEl('div');\n    div.append(smithProgressTopEl);\n    div.append(smithProgressBottom);\n\n    const upgradeImg = document.createElement('img');\n    upgradeImg.src = `./images/smithUpgrade-${upgrade.codeName}.png`;\n\n    smithProgressContainer.append(upgradeImg);\n    smithProgressContainer.append(div);\n\n    return smithProgressContainer;\n};\n\nconst buildSmithUpgrades = (): HTMLElement => {\n    const smithUpgradesWrapper = createEl('div', ['smith-upgrades-wrapper']);\n\n    const availableUpgradesHeader = createEl('p', ['smith-header-text'], 'Available Upgrades');\n    const lockedUpgradesHeader = createEl('p', ['smith-header-text', 'small'], 'Locked Upgrades');\n    const ownedUpgradesHeader = createEl('p', ['smith-header-text', 'small'], 'Owned Upgrades');\n\n    const smithAvailableUpgradesContainer = createEl('div', ['smith-upgrades-container', 'available-smith-upgrades-container']);\n    const smithLockedUpgradesContainer = createEl('div', ['smith-upgrades-container', 'locked-smith-upgrades-container']);\n    const smithOwnedUpgradesContainer = createEl('div', ['smith-upgrades-container', 'owned-smith-upgrades-container']);\n\n    let hasAvailableUpgrades = false;\n    let hasLockedUpgrades = false;\n    let hasOwnedUpgrades = false;\n\n    InstanceState.smithUpgrades.forEach((upgrade) => {\n        const upgradeEl = createEl('div', ['smith-upgrade']);\n        const upgradeImg = document.createElement('img');\n        upgradeImg.src = `./images/smithUpgrade-${upgrade.codeName}.png`;\n\n        upgradeEl.append(upgradeImg);\n\n        if (upgrade.isNew) {\n            const newText = createEl('p', ['new'], 'New!');\n            upgradeEl.append(newText);\n        }\n\n        if (\n            (!upgrade.isLocked && !upgrade.isOwned && !upgrade.isInProgress) ||\n            (upgrade.isRepeatable && !upgrade.isLocked && !upgrade.isInProgress)\n        ) {\n            hasAvailableUpgrades = true;\n            upgradeEl.addEventListener('click', (event) => upgrade.buy(event));\n            upgradeEl.addEventListener('mouseover', (event) => upgrade.removeNew(event));\n            upgradeEl.addEventListener('mousemove', (event) => showTooltip(event, { type: 'smithUpgrade', smithUpgrade: upgrade }));\n            upgradeEl.addEventListener('mouseleave', () => hideTooltip());\n            smithAvailableUpgradesContainer.append(upgradeEl);\n        } else if (upgrade.isLocked) {\n            hasLockedUpgrades = true;\n            smithLockedUpgradesContainer.append(upgradeEl);\n        } else if (upgrade.isOwned) {\n            hasOwnedUpgrades = true;\n            upgradeEl.addEventListener('mousemove', (event) => showTooltip(event, { type: 'smithUpgrade', smithUpgrade: upgrade }));\n            upgradeEl.addEventListener('mouseleave', () => hideTooltip());\n            smithOwnedUpgradesContainer.append(upgradeEl);\n        }\n    });\n\n    if (hasAvailableUpgrades) {\n        smithUpgradesWrapper.append(availableUpgradesHeader);\n        smithUpgradesWrapper.append(smithAvailableUpgradesContainer);\n    }\n\n    // if (hasLockedUpgrades) {\n    //     smithUpgradesWrapper.append(lockedUpgradesHeader);\n    //     smithUpgradesWrapper.append(smithLockedUpgradesContainer);\n    // }\n\n    if (hasOwnedUpgrades) {\n        smithUpgradesWrapper.append(ownedUpgradesHeader);\n        smithUpgradesWrapper.append(smithOwnedUpgradesContainer);\n    }\n\n    return smithUpgradesWrapper;\n};\n\nconst buildSmithSettings = (): HTMLElement => {\n    const el = createEl(\n        'div',\n        ['smith-settings-container'],\n        `\n        <p class='smith-power-text'>Smith Power</p>\n        <p class='smith-power'>${State.smith.power}</p>\n    `\n    );\n\n    const inputRange = document.createElement('input');\n    inputRange.classList.add('smith-slider');\n    inputRange.type = 'range';\n    inputRange.min = '0';\n    inputRange.max = `${State.smith.maxPower}`;\n    inputRange.value = `${State.smith.power}`;\n    inputRange.step = '1';\n    inputRange.addEventListener('input', (e: any) => updateSmithPower(e.target.value));\n\n    el.append(inputRange);\n\n    return el;\n};\n\n// - -----------------------------------------------------------------------------------\n// - TEXT SCROLLER ---------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nconst startTextScroller = () => {\n    const selectedMessage = getRandomFromArr(State.textScrollerMessages);\n    constants.textScrollerTextEl.innerHTML = selectedMessage;\n    InstanceState.textScroller.isInProgress = true;\n};\n\nconst moveTextInScroller = () => {\n    const speed = State.settings.tick === 30 ? 2 : 1;\n    const currentLeft = constants.textScrollerTextEl.offsetLeft;\n\n    constants.textScrollerTextEl.style.left = currentLeft - speed + 'px';\n\n    if (currentLeft + constants.textScrollerTextEl.offsetWidth <= 0) {\n        constants.textScrollerTextEl.innerHTML = '';\n        constants.textScrollerTextEl.style.left = '100%';\n        InstanceState.textScroller.isInProgress = false;\n        startTextScroller();\n    }\n};\n\n// - -----------------------------------------------------------------------------------\n// - INIT STUFF ------------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nlet tick = 0;\nconst gameLoop = () => {\n    if (UpdatesState.updateOres) updateOres();\n    if (UpdatesState.updateOreHp) updateOreHp();\n    if (UpdatesState.updateOreSprite) updateOreSprite();\n    if (UpdatesState.updateGenerationLv) updateGenerationLv();\n    if (UpdatesState.updateGenerationXp) updateGenerationXp();\n    if (UpdatesState.updateGenerationLvOnRefine) updateGenerationLvOnRefine();\n    if (UpdatesState.updateTabs) updateTabs();\n    if (UpdatesState.updateTabContent) updateTabContent();\n    if (UpdatesState.updateOPS) updateOPS();\n\n    if (InstanceState.selectedTab === 'store') {\n        updateStorePriceClasses();\n    }\n\n    if (InstanceState.textScroller.isInProgress) moveTextInScroller();\n    if (State.smith.inProgress) updateSmithProgress();\n\n    gainOre(State.ops / State.settings.tick, false);\n\n    if (Object.keys(InstanceState.oreParticles).length > 0) {\n        constants.particlesCanvasContext.clearRect(\n            0,\n            0,\n            constants.particlesCanvasContext.canvas.width,\n            constants.particlesCanvasContext.canvas.height\n        );\n        for (let i in InstanceState.oreParticles) InstanceState.oreParticles[i].draw();\n    }\n\n    tick++;\n    if (tick >= State.settings.tick) {\n        tick = 0;\n        if (State.ops > 0) generateRisingText(null, 'buildingOps', State.ops);\n    }\n};\n\nconst initiateCanvasParticles = () => {\n    constants.particlesCanvasEl.height = window.innerHeight;\n    constants.particlesCanvasEl.width = window.innerWidth;\n};\n\nconst instantiateComboSign = () => {\n    if (State.stats.highestCombo >= 5) {\n        constants.comboSignEl.classList.add('visible');\n    }\n};\n\nconst initialLoad = () => {\n    initiateCanvasParticles();\n    instantiateTabs();\n    instantiateBuildings();\n    instantiateSmithUpgrades();\n    instantiateAchievements();\n    instantiateComboSign();\n    instantiateUpgrades();\n\n    constants.oreSpriteEl.onclick = handleOreClick;\n\n    // ! DELETE LATER - TESTING\n    startTextScroller();\n\n    setInterval(gameLoop, 1000 / State.settings.tick);\n};\n\nwindow.onload = () => initialLoad();\n\n// - -----------------------------------------------------------------------------------\n// - TESTING PURPOSES -------------------------------------------------------------------\n// - -----------------------------------------------------------------------------------\n\nvar before, now, fps;\nlet fpsEl: HTMLElement = document.querySelector('.fps');\nfpsEl.style.zIndex = '5';\nbefore = Date.now();\nrequestAnimationFrame(function loop() {\n    now = Date.now();\n    fps = Math.round(1000 / (now - before));\n    before = now;\n    requestAnimationFrame(loop);\n    fpsEl.innerHTML = fps;\n});\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}